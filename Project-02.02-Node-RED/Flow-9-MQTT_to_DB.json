[
    {
        "id": "c7ce18966b1a67ab",
        "type": "subflow",
        "name": "Subflow 1 - Temperature Converter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "3d3f05f82847c5c2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 280,
                "wires": [
                    {
                        "id": "95c8577b0b2c111f",
                        "port": 0
                    },
                    {
                        "id": "ead939118a8d538b",
                        "port": 0
                    },
                    {
                        "id": "3d3f05f82847c5c2",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f6ab385c8ff91783",
        "type": "comment",
        "z": "c7ce18966b1a67ab",
        "name": "A function to convert temperature unit",
        "info": "A function to convert temperature unit",
        "x": 170,
        "y": 20,
        "wires": []
    },
    {
        "id": "95c8577b0b2c111f",
        "type": "function",
        "z": "c7ce18966b1a67ab",
        "name": "Fahrenheit to Celsius Converter",
        "func": "// Fahrenheit to Celsius conversion formula\nvar fahrenheit = msg.payload.value;\nvar celsius = (fahrenheit - 32) * 5 / 9;\n\n// Set the payload to the result\nmsg.payload = {\n    value: parseFloat(celsius.toFixed(2)),\n    unit: 'C',\n    timestamp: msg.payload.timestamp\n}\n\n// Return the message object to the next node\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ead939118a8d538b",
        "type": "function",
        "z": "c7ce18966b1a67ab",
        "name": "Kelvin to Celsius Converter",
        "func": "var kelvin = msg.payload.value;\nvar celsius = kelvin - 273.15;\n\n// Set the payload to the result\nmsg.payload = {\n    value: parseFloat(celsius.toFixed(2)),\n    unit: 'C',\n    timestamp: msg.payload.timestamp\n}\n\n// Return the message object to the next node\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3d3f05f82847c5c2",
        "type": "switch",
        "z": "c7ce18966b1a67ab",
        "name": "",
        "property": "payload.unit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "F",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "K",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "C",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 270,
        "y": 260,
        "wires": [
            [
                "95c8577b0b2c111f"
            ],
            [
                "ead939118a8d538b"
            ],
            []
        ]
    },
    {
        "id": "3e96060baed4836a",
        "type": "tab",
        "label": "Flow 9 - MQTT to DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "adcf9305e15ec234",
        "type": "mqtt in",
        "z": "3e96060baed4836a",
        "d": true,
        "name": "",
        "topic": "+/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e284a20b36344733",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "16bde2e8d606c6d4"
            ]
        ]
    },
    {
        "id": "16bde2e8d606c6d4",
        "type": "subflow:c7ce18966b1a67ab",
        "z": "3e96060baed4836a",
        "name": "",
        "x": 320,
        "y": 300,
        "wires": [
            [
                "120449fef1845fb5",
                "35e6b6b4301c1dcf"
            ]
        ]
    },
    {
        "id": "120449fef1845fb5",
        "type": "debug",
        "z": "3e96060baed4836a",
        "name": "Converted Temp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "88f3e935bd19adac",
        "type": "mysql",
        "z": "3e96060baed4836a",
        "mydb": "bf611a16030fc80e",
        "name": "",
        "x": 1040,
        "y": 740,
        "wires": [
            [
                "b474a8517d78132a"
            ]
        ]
    },
    {
        "id": "b474a8517d78132a",
        "type": "debug",
        "z": "3e96060baed4836a",
        "name": "Db Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 860,
        "wires": []
    },
    {
        "id": "31e6d02e0d8013cb",
        "type": "template",
        "z": "3e96060baed4836a",
        "name": "Construct SQL",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO sensor_data (timestamp, device_id, value, unit) VALUES ('{{payload.timestamp}}', '{{payload.deviceId}}', {{payload.value}}, '{{payload.unit}}')",
        "output": "str",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "030eeb48a38264f0",
                "72edf966af8c8d0d"
            ]
        ]
    },
    {
        "id": "35e6b6b4301c1dcf",
        "type": "function",
        "z": "3e96060baed4836a",
        "name": "Construct Data for Db",
        "func": "var deviceId = msg.topic.split('/')[0];\nvar value = msg.payload.value;\nvar unit = msg.payload.unit;\n\n// Original timestamp in ISO 8601 format\nvar timestampIso = msg.payload.timestamp;\n\n// Convert to MySQL DATETIME format (YYYY-MM-DD HH:MM:SS)\nvar timestampMySql = new Date(timestampIso).toISOString().slice(0, 19).replace('T', ' ');\n\nmsg.payload = {\n    timestamp: timestampMySql,\n    deviceId: deviceId,\n    value,\n    unit\n}\n\n//msg.topic = `INSERT INTO sensor_data (timestamp, device_id, value, unit) VALUES ('${timestampMySql}', '${deviceId}', ${value}, '${unit}')`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "31e6d02e0d8013cb"
            ]
        ]
    },
    {
        "id": "030eeb48a38264f0",
        "type": "debug",
        "z": "3e96060baed4836a",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 440,
        "wires": []
    },
    {
        "id": "72edf966af8c8d0d",
        "type": "function",
        "z": "3e96060baed4836a",
        "name": "Payload to Topic",
        "func": "msg.topic = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            [
                "88f3e935bd19adac"
            ]
        ]
    },
    {
        "id": "e284a20b36344733",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "172.17.0.2",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bf611a16030fc80e",
        "type": "MySQLdatabase",
        "name": "MySQL",
        "host": "172.17.0.5",
        "port": "3306",
        "db": "iotdb",
        "tz": "",
        "charset": "UTF8"
    }
]